/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void check(TreeNode* root, int k,vector<int>&v)
    {
        if(root==NULL) return;
        v.push_back(root->val);
        check(root->left,k,v);
        check(root->right,k,v);
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int>v;
        int sum=0;
        check(root,k,v);
        bool flag=false;
        int sz=v.size();
        for(int i=0;i<sz-1;i++)
        {
            for(int j=i+1;j<sz;j++)
            {
                if((v[i]+v[j])==k)
                {
                    flag==true;
                    break;
                }
            }
        }
        if(flag==true) return true;
        else return false;
    }
};